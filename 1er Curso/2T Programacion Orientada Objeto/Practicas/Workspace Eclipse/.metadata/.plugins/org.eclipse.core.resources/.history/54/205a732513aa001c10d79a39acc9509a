package Sessio1;

import javax.swing.*;
import java.awt.event.*;
import java.awt.*;
import java.util.*;

public class JocVida extends JFrame implements ActionListener {

	private JLabel fila, columna, generacio, vius, text;// text
	private JTextField fil, col, gen, life; // casella per introduir valor
	private casella[][] Panell, aux; // matriu panells
	private JButton dades, fgen; // buttons per fer generacio i comencar
	private int nfila, ncol, ngen, nvius, cont, contVius; // valors
	private JPanel ec, centre;// dividir interfaz

	public JocVida(String nom) {
		super(nom);
		initComponents();
	}

	public void initComponents() {

		// esquerra = new JPanel();
		ec = new JPanel();
		this.setLayout(new BorderLayout());
		ec.setLayout(new GridLayout(13, 1)); // fer una taula amb una columna i 13 files per posar la info

		centre = new JPanel();
		this.setLayout(new BorderLayout());

		// nuemero de files
		fila = new JLabel("Numero de files");
		fil = new JTextField();

		// nuemro de columnes
		columna = new JLabel("Numero de columnes");
		col = new JTextField();

		// numero de generacions
		generacio = new JLabel("Numero de generacions");
		gen = new JTextField();

		// numero de vius
		vius = new JLabel("Numero d'essers vius inicials");
		life = new JTextField();

		// butons dels final
		text = new JLabel();

		// if (nfila, ncol, ngen, vius==true) llavors visible true i enable true
		dades = new JButton("Entra dades");
		fgen = new JButton("Generacio");
		fgen.setEnabled(false);

		// esquerra.setLayout(new BoxLayout(esquerra, BoxLayout.Y_AXIS));

		ec.add(fila);
		ec.add(fil);
		ec.add(columna);
		ec.add(col);
		ec.add(generacio);
		ec.add(gen);
		ec.add(vius);
		ec.add(life);
		ec.add(text);
		ec.add(dades);
		ec.add(fgen);

		cont = 1;

		// centre.add(Panell);

		dades.addActionListener(this);
		fgen.addActionListener(this);

		this.getContentPane().add(ec, BorderLayout.WEST);
		this.getContentPane().add(centre, BorderLayout.CENTER);

		// ara el panell

	}

	public void actionPerformed(ActionEvent e) {

		if (e.getSource() == this.dades) { // si acciona comprovar si les dades son correctes

			nfila = Integer.parseInt(fil.getText());
			ncol = Integer.parseInt(col.getText());
			ngen = Integer.parseInt(gen.getText());
			nvius = Integer.parseInt(life.getText());
			if (nfila > 0 && ncol > 0) {
				if (ngen <= 10 && ngen > 0) {
					if (nvius <= (nfila * ncol) && nvius > 0) {

						text.setText("Dades Correctes");
						fgen.setEnabled(true); // podem fer genreacio
						fgen.setText("Generaciï¿½: " + this.cont);
						dades.setEnabled(false);
						fil.setEnabled(false);
						col.setEnabled(false);
						gen.setEnabled(false);
						life.setEnabled(false);
						this.Panell = new casella[nfila][ncol];
						this.aux = new casella[nfila][ncol];
						centre.setLayout(new GridLayout(nfila, ncol));
						for (int i = 0; i < nfila; i++) {
							for (int j = 0; j < ncol; j++) {
								Panell[i][j] = new casella();
								centre.add(Panell[i][j]);
							}
						}
						posarVida(nvius);
						contVius = nvius;
					}
				}

			} else {
				text.setText("Dades Incorrectes");
			}
		}

		if (e.getSource() == this.fgen) {
			//if (this.cont == this.ngen - 1 || ferGeneracio() == true || contVius == 0) {
				//fgen.setEnabled(false);
				//cont++;

			} else {
				cont++;
				ferGeneracio();
			}
			fgen.setText("Generacio: " + this.cont);
		}
	}

	public boolean ferGeneracio() {
		boolean diferent = false;
		copiar(this.aux);

		for (int i = 0; i < this.Panell.length; i++) {
			for (int j = 0; j < this.Panell[i].length; j++) {
				if (aux[i][j].getEstat() == false && quantesVeines(i, j) == 3) {
					contVius++;
					this.aux[i][j].setViu();

				} else if ((aux[i][j].getEstat() == true && quantesVeines(i, j) >= 4)
						|| (aux[i][j].getEstat() == true && quantesVeines(i, j) <= 1)) {
					contVius--;
					this.aux[i][j].setMort();

				}
			}
		}
		for (int i = 0; i < this.nfila; i++) {
			for (int j = 0; j < this.ncol; j++) {
				while (diferent != true) {
					if (this.Panell[i][j].getEstat() == this.aux[i][j].getEstat()) {
						diferent = false;
					} else {
						diferent = true;

					}
				}
			}
		}
		canviar();
		return diferent;

	}

	public int quantesVeines(int fil, int col) {
		int veins = 0;
		for (int i = fil - 1; i <= fil + 1; i++) {
			for (int j = col - 1; j <= col + 1; j++) {
				if (i >= 0 && i < this.nfila && j >= 0 && j < this.ncol) {

					if (Panell[i][j].getEstat()) {

						if (!(fil == i && col == j))
							veins++;
					}
				}
			}
		}
		return veins;

	}

	public void posarVida(int N) { // n= nombre de vius de la 1r gen
		Random random = new Random();
		for (int i = 0; i < N; i++) {

			int fila = random.nextInt(this.nfila);
			int col = random.nextInt(this.ncol);
			while (this.Panell[fila][col].getEstat() == true) {

				fila = random.nextInt(this.nfila);
				col = random.nextInt(this.ncol);
			}
			this.Panell[fila][col].setViu();
		}
	}

	public void canviar() {
		for (int i = 0; i < this.nfila; i++) {
			for (int j = 0; j < this.ncol; j++) {
				Panell[i][j] = aux[i][j];
			}
		}
	}

	public void copiar(casella aux[][]) { // copiar panell i fer tractament amb aux
		for (int i = 0; i < this.nfila; i++) {
			for (int j = 0; j < this.ncol; j++) {
				if (Panell[i][j].getEstat() == true) {
					aux[i][j].setViu();
				} else aux[i][j].setMort();
			}
		}
	}

	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				JFrame jf;
				jf = new JocVida("Joc Vida");
				jf.setBounds(300, 300, 500, 500);
				jf.setVisible(true);
			}
		}

		);
	}
}